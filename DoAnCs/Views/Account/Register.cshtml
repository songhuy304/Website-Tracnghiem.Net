@model DoAnCs.Models.RegisterViewModel

@{
    Layout = null;
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <link href="~/Content/asset/css/Loginc.css" rel="stylesheet" />
    <title>Đăng Ký Tài Khoản</title>
</head>
<body>
    <section background-position: center; background-size: cover;>
        <div class="form-box">
            <div class="form-value">
                <form method="post" action="">
                    <h2>Đăng Ký</h2>

                    @using (Html.BeginForm("Register", "Account", FormMethod.Post))

                    {
                        @Html.AntiForgeryToken()
                        @Html.ValidationSummary(true);
                        <div class="row">
                            <div class="col-md-5">
                                <div class="inputbox">
                                    <ion-icon name="mail-outline"></ion-icon>
                                    @Html.TextBoxFor(x => x.UserName, new { @class = "form-control", @placeholder = "Tài khoản" })
                                    @Html.ValidationMessageFor(x => x.UserName, null, new { @class = "text-danger" })

                                </div>
                            </div>
                            <div class="col-md-5">
                                <div class="inputbox">
                                    <ion-icon name="mail-outline"></ion-icon>
                                    @Html.TextBoxFor(x => x.Email, new { @class = "form-control", @placeholder = "Email" })
                                    @Html.ValidationMessageFor(x => x.Email, null, new { @class = "text-danger" })

                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-5">
                                <div class="inputbox">
                                    <ion-icon name="mail-outline"></ion-icon>
                                    @Html.PasswordFor(x => x.Password, new { @class = "form-control", @placeholder = "Mật Khẩu" })
                                    @Html.ValidationMessageFor(x => x.Password, null, new { @class = "text-danger" })

                                </div>
                            </div>
                            <div class="col-md-5">
                                <div class="inputbox">
                                    <ion-icon name="mail-outline"></ion-icon>
                                    @Html.PasswordFor(x => x.ConfirmPassword, new { @class = "form-control", @placeholder = "Xác Nhận mật khẩu" })
                                    @Html.ValidationMessageFor(x => x.ConfirmPassword, null, new { @class = "text-danger" })

                                </div>
                            </div>
                        </div>


                        <div class="inputbox">
                            <ion-icon name="lock-closed-outline"></ion-icon>

                            @Html.TextBoxFor(x => x.Phone, new { @class = "form-control", @placeholder = "phone" })
                            @Html.ValidationMessageFor(x => x.Phone, null, new { @class = "text-danger" })

                        </div>
                        <div class="row">
                            <div class="col-4">
                                <button type="submit" class="btn btn-primary btn-block">Đăng Ký</button>
                            </div>
                        </div>

                    }

                    <div class="register">
                        <p style="color:red"> @ViewBag.ThongBao</p>
                        <p>Bạn Đã Có tài khoản<a href="/account/Login">Đăng Nhập</a></p>
                    </div>
                </form>
            </div>
        </div>
    </section>
    <script type="module" src="https://unpkg.com/ionicons@5.5.2/dist/ionicons/ionicons.esm.js"></script>
    <script nomodule src="https://unpkg.com/ionicons@5.5.2/dist/ionicons/ionicons.js"></script>
</body>
</html>



